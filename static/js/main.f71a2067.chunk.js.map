{"version":3,"sources":["components/Nav.js","components/Header.js","components/Panel.js","components/Banner.js","components/Home.js","components/About.js","components/Keydates.js","components/History.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Nav","getNavState","props","navState","className","this","to","href","target","rel","React","Component","Header","state","toggle","handleClick","setState","prevState","getIcon","src","alt","onClick","Panel","data","icon","subject","years","day","time","dangerouslySetInnerHTML","__html","venue","Banner","intro","require","Home","index","classes","map","val","key","About","about","title","body","objectives","objective","Keydates","keydates","calendar","items","month","events","event","date","History","history","Footer","Date","getFullYear","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f71a2067.chunk.js","sourcesContent":["import React from 'react'\nimport { HashRouter, NavLink } from \"react-router-dom\";\nimport '../stylesheets/nav.css'\n\nexport default class Nav extends React.Component {  \n  getNavState = () => {\n    return this.props.navState ? 'visible' : '';\n  }\n  render() {\n    return (\n      <HashRouter>      \n        <nav className={`main-nav ${this.getNavState()}`}>\n          <ul>          \n            <li><NavLink to=\"/about\">About HYA</NavLink></li>\n            <li><NavLink to=\"/keydates\">Key Dates</NavLink></li>\n            <li><NavLink to=\"/history\">History</NavLink></li>\n          </ul>\n          <div className=\"social\">\n            <a href=\"https://www.facebook.com/hyauk1\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"facebook\"></a>\n            <a href=\"mailto:info@hyauk.org\" className=\"email\"></a>\n          </div>\n        </nav>\n      </HashRouter>\n    )\n  }\n}","import React from 'react'\nimport '../stylesheets/header.css'\n\nimport Nav from './Nav'\n\nexport default class Header extends React.Component {\n  state = {\n    toggle: false,\n  };\n\n  handleClick = () => {\n    this.setState(prevState => ({\n      toggle: !prevState.toggle,\n    }));\n  }\n\n  getIcon = () => {\n    return this.state.toggle ? 'close' : '';\n  }\n  render() {\n    return (\n      <header>\n        <div className=\"header-wrapper\">\n          <a href=\"/\">\n            <div className=\"brand\">\n              <div className=\"header-logo\">\n                <img src=\"../images/logo.png\" alt=\"logo\"/>\n              </div>\n              <div className=\"brand-wrapper\">\n                <span className=\"brand-title\">Hindu Youth Association</span>\n              </div>\n            </div>\n          </a>\n          <Nav navState={this.state.toggle} />\n          <span className={`nav-dropdown ${this.getIcon()}`} onClick={this.handleClick}></span>\n        </div>  \n      </header>\n    )\n  }\n}","import React from 'react'\nimport '../stylesheets/panel.css'\n\nconst Panel = (props) => {\n  return (    \n    <div className={`class ${props.data.className}`}>\n      <img className=\"class-icon\" src={props.data.icon} alt={props.data.subject} />\n      <h3 className=\"class-name\">{props.data.subject}</h3>    \n      <div className=\"years\">{props.data.years}</div>\n      <div className=\"day-time\">\n        <span>{props.data.day}, </span>\n        <span>{props.data.time}</span>\n      </div>\n      <div dangerouslySetInnerHTML={{__html: props.data.venue}}></div>\n    </div>      \n  )\n}\n\nexport default Panel;","import React from 'react'\nimport '../stylesheets/banner.css'\n\nconst Banner = (props) => {\n  return (\n    <section className=\"banner\">  \n      <div className=\"banner-heading\">    \n        <div className=\"quote\">\n          <h4>{props.intro}</h4>\n          <div className=\"credit\">Swami Vivekanand</div>\n        </div>\n      </div>\n    </section>  \n  )\n}\n\nexport default Banner;","import React from 'react'\nimport Panel from './Panel'\nimport '../stylesheets/home.css'\n\nimport Banner from './Banner'\n\nconst data = require('../content/data.json');\n\nconst Home = () => {\n  return (\n    <div className=\"home\">\n      <Banner intro={data.index.intro} />\n      <div className=\"content\">\n        <h1 className=\"title\">Our Classes</h1>\n        <div className=\"classes\">\n          {data.index.classes.map((val, key) => {\n            return(\n              <Panel key={key} data={val} />\n            )\n          })}        \n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home","import React from 'react'\n\n\nconst data = require('../content/data.json');\n\nconst About = () => {\n  return(\n    <div className=\"content\">\n      <h1 className=\"title\">{data.about.title}</h1>\n      <div dangerouslySetInnerHTML={{__html: data.about.body}}></div>\n      <h2 className=\"title\">{data.about.objectives.title}</h2>\n      <ol>\n      {data.about.objectives.objectives.map((objective, key) => {\n        return (\n          <li key={key}>{objective.objective}</li>\n        )\n      })}\n      </ol>\n    </div>\n  )\n}\n\nexport default About;","import React from 'react'\nimport '../stylesheets/keydates.css'\n\nconst data = require('../content/data.json');\n\nconst Keydates = () => {\n  return(\n    <div className=\"content\">\n      <h1 className=\"title\">{data.keydates.title}</h1>      \n      {data.keydates.calendar.map((items,key) => {\n        return (\n          <div className=\"wrapper\">\n            <h3 key={key} className=\"title\">{items.month}</h3>              \n            {items.events.map((event, key) => {\n              return(\n                <div key={key} className=\"events\">\n                  <div className=\"date\" dangerouslySetInnerHTML={{__html: event.date }}></div>\n                  <div className=\"event\" dangerouslySetInnerHTML={{__html: event.event }}></div>\n                </div> \n              )           \n            })}\n          </div>\n        )        \n      })}      \n    </div>\n  )\n}\n\nexport default Keydates;","import React from 'react'\n//import '../stylesheets/history.css'\n\nconst data = require('../content/data.json');\n\nconst History = () => {\n  return(\n    <div className=\"content\">\n      <h1 className=\"title\">{data.history.title}</h1>\n      <div dangerouslySetInnerHTML={{__html: data.history.body}}></div>\n    </div>\n  )\n}\n\nexport default History;","import React from 'react'\nimport '../stylesheets/footer.css'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"logo\">\n        <img className=\"logo-40\" src=\"./images/logo-40.png\" alt=\"HYA 40 Logo\"/>\n        <img src=\"../images/logo.png\" alt=\"HYA Logo\"/>\n      </div>\n      <div className=\"tagline\">Planting Seeds For A Brighter Future</div>\n      <div className=\"copyright\">Copyright &copy; { new Date().getFullYear() } Hindu Youth Association. All rights reserved. Registered charity no. 1142405</div>\n    </footer>\n  )\n}\n\nexport default Footer;","import React from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport './stylesheets/App.css';\n\nimport Header from './components/Header'\nimport Home from './components/Home'\nimport About from './components/About'\nimport Keydates from './components/Keydates'\nimport History from './components/History'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <HashRouter>\n        <div>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/keydates\" component={Keydates} />\n        <Route path=\"/history\" component={History}/>\n        </div>\n      </HashRouter>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}